Typically, we don't just store data: we need it to reflect the current state of
things in real life as closely as possible

1. General form 

UPDATE table_name SET col1 = expr1, col2 = expr2, ..., colN = expr;

Example:
Table "employees"

+---------------+----------------+--------------+--------------+
| department_id |    last_name   |   salary     |  upper_limit |
+---------------+----------------+--------------+--------------+
|   12          | Johnson        |  80000       |   130000     |
+---------------+----------------+--------------+--------------+
|   78          | Lee            |  90000       |   120000     |
+---------------+----------------+--------------+--------------+
|   34          | Fowler         |  70000       |   140000     |
+---------------+----------------+--------------+--------------+
|   65          | Owen           |  60000       |   110000     |
+---------------+----------------+--------------+--------------+

UPDATE employees SET department_id = 14;

+---------------+----------------+--------------+--------------+
| department_id |    last_name   |   salary     |  upper_limit |
+---------------+----------------+--------------+--------------+
|   14          | Johnson        |  80000       |   130000     |
+---------------+----------------+--------------+--------------+
|   14          | Lee            |  90000       |   120000     |
+---------------+----------------+--------------+--------------+
|   14          | Fowler         |  70000       |   140000     |
+---------------+----------------+--------------+--------------+
|   14          | Owen           |  60000       |   110000     |
+---------------+----------------+--------------+--------------+

________________________________________________________________
Column references

New values don't have to be constant literals. Oftentimes, they are composed based on data 
that is already present in the table cells. Each column reference on the right side of the 
assignment represents the current value stored in the corresponding cell of a row

UPDATE employees SET salary = salary + 10000;

+---------------+----------------+--------------+--------------+
| department_id |    last_name   |   salary     |  upper_limit |
+---------------+----------------+--------------+--------------+
|   14          | Johnson        |  90000       |   130000     |
+---------------+----------------+--------------+--------------+
|   14          | Lee            |  100000      |   120000     |
+---------------+----------------+--------------+--------------+
|   14          | Fowler         |  80000       |   140000     |
+---------------+----------------+--------------+--------------+
|   14          | Owen           |  70000       |   110000     |
+---------------+----------------+--------------+--------------+

Let's try to come up with something more elaborate:

UPDATE empliyees SET salary = floor(0.8 * upper_limit)

+---------------+----------------+--------------+--------------+
| department_id |    last_name   |   salary     |  upper_limit |
+---------------+----------------+--------------+--------------+
|   14          | Johnson        |  104000      |   130000     |
+---------------+----------------+--------------+--------------+
|   14          | Lee            |  96 000      |   120000     |
+---------------+----------------+--------------+--------------+
|   14          | Fowler         |  112000      |   140000     |
+---------------+----------------+--------------+--------------+
|   14          | Owen           |  88000       |   110000     |
+---------------+----------------+--------------+--------------+

